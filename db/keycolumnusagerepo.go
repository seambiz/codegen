package db

import (
	"database/sql"

	"github.com/seambiz/codegen"
	"github.com/seambiz/codegen/db/mysql"
)

// GENERATED BY CODEGEN.

/* KEYCOLUMNUSAGERepo implements KEYCOLUMNUSAGERepository interface definition. */
type KEYCOLUMNUSAGERepo struct {
	conn *sql.DB
}

func NewKEYCOLUMNUSAGERepo(conn *sql.DB) codegen.KEYCOLUMNUSAGERepository {
	return &KEYCOLUMNUSAGERepo{
		conn: conn,
	}
}
	

	
		
	

	


// ^^ END OF GENERATED BY CODEGEN. ^^

func (r KeyColumnUsageRepo) QueryBySchemaAndRefSchemaAndTable(ctx *codegen.Context, schema, refschema, table string) ([]*codegen.KeyColumnUsage, error) {
	return mysql.NewKeyColumnUsageStore(ctx, r.conn).
		Where("UPPER(table_schema) = UPPER(?) AND UPPER(referenced_table_schema) = UPPER(?) AND UPPER(table_name) = UPPER(?)").
		OrderBy("constraint_name, ordinal_position").
		Query(schema, refschema, table)
}
