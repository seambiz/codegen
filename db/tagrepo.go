package db

import (
	"database/sql"

	"github.com/seambiz/codegen"
	"github.com/seambiz/codegen/db/mysql"
)

// GENERATED BY CODEGEN.

/* TagRepo implements TagRepository interface definition. */
type TagRepo struct {
	conn *sql.DB
}

func NewTagRepo(conn *sql.DB) codegen.TagRepository {
	return &TagRepo{
		conn: conn,
	}
}

func (r TagRepo) Create(ctx *codegen.Context, data *codegen.Tag) error {
	return mysql.NewTagStore(ctx, r.conn).Insert(data)
}

func (r TagRepo) Update(ctx *codegen.Context, data *codegen.Tag) error {
	_, err := mysql.NewTagStore(ctx, r.conn).Update(data)
	return err
}

func (r TagRepo) UpdatePartial(ctx *codegen.Context, data *codegen.TagPartial) error {
	_, err := mysql.NewTagStore(ctx, r.conn).SetBits(&data.Touched).Update(&data.Tag)
	return err
}

func (r TagRepo) Delete(ctx *codegen.Context, data *codegen.Tag) error {
	_, err := mysql.NewTagStore(ctx, r.conn).Delete(data)
	return err
}

func (r TagRepo) OneByID(ctx *codegen.Context, id int) (*codegen.Tag, error) {
	return mysql.NewTagStore(ctx, r.conn).OneByID(id)
}

// ^^ END OF GENERATED BY CODEGEN. ^^
