package codegen

import (
	"github.com/go-chi/chi/v5"
)

// GENERATED BY CODEGEN.

func main() {
	r := chi.NewRouter()

	r.Mount("/COLUMNS", khttp.LCRUD{
		List:   khttp.GetHandler(repoColumns.List),
		Create: khttp.JsonHandler(ColumnsSvc.Create),
		Read:   khttp.ParamIntHandler("COLUMNS_id", repoColumns.OneByID),
		Update: khttp.JsonIntHandler("COLUMNS_id", ColumnsSvc.Update),
		Delete: khttp.ParamIntHandler("COLUMNS_id", ColumnsSvc.Delete),
	})
	r.Mount("/KEY_COLUMN_USAGE", khttp.LCRUD{
		List:   khttp.GetHandler(repoKeyColumnUsage.List),
		Create: khttp.JsonHandler(KeyColumnUsageSvc.Create),
		Read:   khttp.ParamIntHandler("KEY_COLUMN_USAGE_id", repoKeyColumnUsage.OneByID),
		Update: khttp.JsonIntHandler("KEY_COLUMN_USAGE_id", KeyColumnUsageSvc.Update),
		Delete: khttp.ParamIntHandler("KEY_COLUMN_USAGE_id", KeyColumnUsageSvc.Delete),
	})
	r.Mount("/STATISTICS", khttp.LCRUD{
		List:   khttp.GetHandler(repoStatistics.List),
		Create: khttp.JsonHandler(StatisticsSvc.Create),
		Read:   khttp.ParamIntHandler("STATISTICS_id", repoStatistics.OneByID),
		Update: khttp.JsonIntHandler("STATISTICS_id", StatisticsSvc.Update),
		Delete: khttp.ParamIntHandler("STATISTICS_id", StatisticsSvc.Delete),
	})
	r.Mount("/TABLES", khttp.LCRUD{
		List:   khttp.GetHandler(repoTables.List),
		Create: khttp.JsonHandler(TablesSvc.Create),
		Read:   khttp.ParamIntHandler("TABLES_id", repoTables.OneByID),
		Update: khttp.JsonIntHandler("TABLES_id", TablesSvc.Update),
		Delete: khttp.ParamIntHandler("TABLES_id", TablesSvc.Delete),
	})
	r.Mount("/person", khttp.LCRUD{
		List:   khttp.GetHandler(repoPerson.List),
		Create: khttp.JsonHandler(PersonSvc.Create),
		Read:   khttp.ParamIntHandler("person_id", repoPerson.OneByID),
		Update: khttp.JsonIntHandler("person_id", PersonSvc.Update),
		Delete: khttp.ParamIntHandler("person_id", PersonSvc.Delete),
	})
	r.Mount("/tag", khttp.LCRUD{
		List:   khttp.GetHandler(repoTag.List),
		Create: khttp.JsonHandler(TagSvc.Create),
		Read:   khttp.ParamIntHandler("tag_id", repoTag.OneByID),
		Update: khttp.JsonIntHandler("tag_id", TagSvc.Update),
		Delete: khttp.ParamIntHandler("tag_id", TagSvc.Delete),
	})
	r.Mount("/pet", khttp.LCRUD{
		List:   khttp.GetHandler(repoPet.List),
		Create: khttp.JsonHandler(PetSvc.Create),
		Read:   khttp.ParamIntHandler("pet_id", repoPet.OneByID),
		Update: khttp.JsonIntHandler("pet_id", PetSvc.Update),
		Delete: khttp.ParamIntHandler("pet_id", PetSvc.Delete),
	})
	r.Mount("/extensive", khttp.LCRUD{
		List:   khttp.GetHandler(repoExtensive.List),
		Create: khttp.JsonHandler(ExtensiveSvc.Create),
		Read:   khttp.ParamIntHandler("extensive_id", repoExtensive.OneByID),
		Update: khttp.JsonIntHandler("extensive_id", ExtensiveSvc.Update),
		Delete: khttp.ParamIntHandler("extensive_id", ExtensiveSvc.Delete),
	})
}

// ^^ END OF GENERATED BY CODEGEN. ^^
